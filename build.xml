<?xml version="1.0" encoding="utf-8"?>
<!-- ======================================================================== +
 |   Copyright (c) 2006, Pier Paolo Fumagalli <mailto:pier@betaversion.org>   |
 |                            All rights reserved.                            |
 | ==========================================-=============================== |
 |                                                                            | 
 | Redistribution and use in source and binary forms, with or without modifi- |
 | cation, are permitted provided that the following conditions are met:      |
 |                                                                            | 
 |  - Redistributions of source code must retain the  above copyright notice, |
 |    this list of conditions and the following disclaimer.                   |
 |                                                                            | 
 |  - Redistributions  in binary  form  must  reproduce the  above  copyright |
 |    notice,  this list of conditions  and the following  disclaimer  in the |
 |    documentation and/or other materials provided with the distribution.    |
 |                                                                            | 
 |  - Neither the name of Pier Fumagalli, nor the names of other contributors |
 |    may be used to endorse  or promote products derived  from this software |
 |    without specific prior written permission.                              |
 |                                                                            | 
 | THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS "AS IS" |
 | AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING, BUT NOT LIMITED TO, THE |
 | IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE |
 | ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER  OR CONTRIBUTORS BE |
 | LIABLE  FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,  OR |
 | CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT LIMITED  TO,  PROCUREMENT OF |
 | SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS;  OR BUSINESS |
 | INTERRUPTION)  HOWEVER CAUSED AND ON  ANY THEORY OF LIABILITY,  WHETHER IN |
 | CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) |
 | ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE |
 | POSSIBILITY OF SUCH DAMAGE.                                                |
 + =========================================================================-->

<project name="Confluence AutoExport Plugin" default="all" basedir=".">

  <property name="version"  value="0.13"/>
  
  <property name="dir.source"     value="${basedir}/src"/>
  <property name="dir.build"      value="${basedir}/build"/>
  <property name="dir.apidoc"     value="${basedir}/api"/>

  <property file="build.properties"/>

  <path id="classpath">
    <fileset dir="${confluence}/WEB-INF/lib" includes="**/*.jar"/>
    <pathelement path="${confluence}/WEB-INF/classes"/>
  </path>

  <!-- ======================================================================= +
   | Tasks to verify the correctness of the parameters and/or properties       |
   + ======================================================================= -->

  <!-- Check the "confluence" property -->
  <target name="cancompile" unless="confluence">
    <echo message="Please specify '-Dconfluence=...' on the command line"/>
    <echo message=""/>
    <echo message="This property should point to the directory where you"/>
    <echo message="expanded the Confluence 2.1.x web application."/>
    <fail message="web-app directory not specified"/>
  </target>
  
  <!-- Check the "confluence" property and prepare "canreload" -->
  <target name="checkreload" depends="cancompile">
    <property file="${confluence}/WEB-INF/classes/confluence-init.properties"/>
    <condition property="canreload">
      <and>
        <isset property="confluence.uri"/>
        <isset property="confluence.user"/>
        <isset property="confluence.pass"/>
      </and>
    </condition>
  </target>

  <!-- The "canreload" property comes from "confluence.uri/user/pass" -->
  <target name="canreload" unless="canreload">
    <echo message="To allow reload, you need to specify the following properties"/>
    <echo message=""/>
    <echo message="  confluence.uri  -> The base URI where Confluence is deployed"/>
    <echo message="  confluence.user -> The username of a Confluence administrator"/>
    <echo message="  confluence.pass -> The password for the user you specified"/>
    <echo message=""/>
    <echo message="You can specify all those properties on the command line"/>
    <echo message="specifying '-Dproperty=value'"/>
    <fail message="Missing parameters"/>
  </target>
  
  <!-- ======================================================================= +
   | Compilation and archival tasks                                            |
   + ======================================================================= -->

  <!-- Create temporary directories used for building -->
  <target name="prepare" depends="cancompile"
          description="  Creates the temporary build directory">
    <mkdir dir="${dir.build}"/>
  </target>
  
  <!-- Compile the sources and copy all resources -->
  <target name="compile" depends="prepare"
          description="  Compile the sources">
    <javac classpathref="classpath"
           srcdir="${dir.source}"
           destdir="${dir.build}"
           debug="true">
      <include name="**/*.java"/>
    </javac>
    <copy todir="${dir.build}">
      <fileset dir="${dir.source}" excludes="**/*.java">
        <exclude name="**/*.java"/>
        <exclude name="atlassian-plugin.xml"/>
      </fileset>
    </copy>
    <delete file="${dir.build}/atlassian-plugin.xml"/>
    <copy tofile="${dir.build}/atlassian-plugin.xml"
          file="${dir.source}/atlassian-plugin.xml">
      <filterset>
        <filter token="VERSION" value="${version}"/>
      </filterset>
    </copy>
  </target>

  <!-- Prepare a jar file that can be uploaded into Confluence -->
  <target name="jar" depends="compile"
          description="  Build the plugin JAR file">
    <jar file="autoexport-${version}.jar"
         basedir="${dir.build}"/>
  </target>

  <!-- Prepare the JavaDoc API and zip them up for distribution -->
  <target name="api"
          description="  Create the JavaDoc API documentation">
    <mkdir dir="${dir.apidoc}"/>
    <javadoc windowtitle="Confluence AutoExport Plugin ${version}"
             destdir="${dir.apidoc}"
             classpathref="classpath"
             source="${dir.source}">
      <packageset dir="${dir.source}"/>
      <link href="http://www.atlassian.com/software/confluence/docs/api/latest/"/>
      <link href="http://www.opensymphony.com/xwork/api/"/>
      <link href="http://www.opensymphony.com/webwork/api/"/>
      <link href="http://jakarta.apache.org/velocity/docs/api/"/>
      <link href="http://java.sun.com/j2se/1.4/docs/api/"/>
      <link href="http://java.sun.com/j2ee/1.4/docs/api/"/>
    </javadoc>
    <copy todir="${dir.apidoc}">
      <fileset dir="${dir.source}">
        <include name="**/*.gif"/>
        <include name="**/*.pdf"/>
        <include name="**/*.html"/>
        <exclude name="**/.*"/>
        <exclude name="**/*.java"/>
        <exclude name="**/*.properties"/>
      </fileset>
    </copy>
  </target>

  <!-- Build everything excluding the distribution ZIP --> 
  <target name="all" depends="jar,api" description="* Create all targets"/>
  
  <!-- Build the distribution ZIP file -->
  <target name="clean" description="  Clean up all targets used by the build">
    <delete dir="${dir.build}"/>
    <delete dir="${dir.apidoc}"/>
    <delete file="autoexport-${version}-src.zip"/>
    <delete file="autoexport-${version}-api.zip"/>
    <delete file="autoexport-${version}.jar"/>
  </target>

  <!-- ======================================================================= +
   | Automatically reload plugin within confluence                             |
   + ======================================================================= -->
  
  <target name="reload" depends="checkreload,canreload,jar"
          description="  Rebuild and reload in confluence">
    <property name="login" value="&amp;os_username=${confluence.user}&amp;os_password=${confluence.pass}"/>
    <property name="baseuri" value="${confluence.uri}admin/plugins.action"/>
    <get dest="temp-reload.out" src="${baseuri}?mode=uninstall&amp;pluginKey=confluence.extra.autoexport${login}"/>
    <copy todir="${confluence.home}/plugins" file="autoexport-${version}.jar"/>
    <get dest="temp-reload.out" src="${baseuri}?mode=rescan${login}"/>
    <delete file="temp-reload.out"/>
  </target>
  

</project>
